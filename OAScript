
#/Users/eliyoung/Desktop/Yoni 1 OA Test/1535-674_WB-202010-014-1_Office Action.pdf



#/Users/eliyoung/Desktop/PatentOAs/1535-111CIP2_WB-201703-008-1-US1_Final Office Action 4.pdf

import fitz  # PyMuPDF
from PIL import Image
import pytesseract
import io

class Solution():

    def __init__(self):
        pass

    def returnUserInput(self):
        self.user_input = input("Which file would you like to examine? ")
        return self.user_input


    def getInputAndExtractImageText(self):
        try:
            # Open the PDF file

            user_input = self.returnUserInput()

            pdf_document = fitz.open(user_input)

            # Check if the PDF has at least one page
            if pdf_document.page_count > 0:
                # Get the first page
                page = pdf_document[0]

                # Try extracting text

                # text = page.get_text("text")
                # if text:
                #     print("Extracted Text:")
                #     print(text)
                # else:
                    # If no text found, check for images
                print("No text found. Checking for images...")
                image_list = page.get_images(full=True)

                if image_list:
                    for img_index, img in enumerate(image_list, start=1):
                        # Extract the image bytes
                        base_image = pdf_document.extract_image(img[0])
                        image_bytes = base_image["image"]

                        # Convert to a PIL Image
                        image = Image.open(io.BytesIO(image_bytes))

                        # Apply OCR to the image
                        ocr_text = pytesseract.image_to_string(image)
                        print(f"Text extracted from image {img_index}:")
                        print(ocr_text)

                        return ocr_text
                else:
                    print("no image_list")
            else:
                print("The PDF has no pages.")

        except FileNotFoundError:
            print(f"The file '{user_input}' was not found.")
        except Exception as e:
            print(f"An error occurred: {e}")
    
    def splitReturnArray(self, stringInput):
        textArr = stringInput.split()
        print("imagetxt as arr: " + str(textArr))
        return textArr

    # def returnSpecificDataValuesAsDictionary(self, arrInput):
    #     #assuming all array indices will be default

    #     self.applicationID = arrInput[22] #gets applicationID

    #     refField = arrInput[27].split("-")

    #     self.refNo = refField[1] #gets refNo
    #     self.dueDate = arrInput[47]

    #     examinerNameArr = [arrInput[42], arrInput[41]]

    #     examinerNameStr = ""
    #     examinerNameStr += arrInput[42]
    #     examinerNameStr += " "
    #     examinerNameStr += arrInput[41]

    #     self.examinerName = examinerNameStr





obj = Solution()

ocr = obj.getInputAndExtractImageText()
obj.splitReturnArray(ocr)